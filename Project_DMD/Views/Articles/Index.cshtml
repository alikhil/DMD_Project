@using Project_DMD.Classes
@using Project_DMD.Models
@model ArticlesIndexViewModel

@{
    ViewBag.Title = "Articles";
}
<div class="well">
    <h2>You have access to more than one million articles. Use it!</h2>
</div>
<p>
    @Html.ActionLink("Add New Article", "Create")
</p>
@Html.Hidden("typeOfSearch", Model.SearchType ?? "articleData")

@{
    SelectList list = ViewBag.SelectedList;
    SelectList sortes = ViewBag.Sortes;
    <div id="container" class="container">
        @Html.Hidden("OrderByDescending", true)
        @Html.HiddenFor(m => m.Page)
            <div class="row">
                <div class="input-group text-center">
                    <input type="text" id="searchKey" value="@Model.SearchKey" class="form-control col-lg-6" style="max-width:700px;" placeholder="Looking for...">
                    @Html.DropDownList("Categories", list, new { @class = "form-control col-lg-6", style = "display:none; max-width:700px;", id = "category" })


                    <span class="input-group col-lg-4" >
                        <span class="input-group-addon" id="orderD">Order</span>
                         @Html.DropDownList("SortType", sortes, new { @class = "form-control" })
                    </span>
                    <span class="input-group-btn">
                        <button class="btn btn-info" onclick="changeDescending()" type="button"><span id="orderSwitcher" class="glyphicon glyphicon-arrow-down" /></button>
                    </span>
                    <span class="input-group-btn">
                        <button class="btn btn-success" onclick="onSubmit()" type="button"><span class="glyphicon glyphicon-search" /></button>
                    </span>
                </div><!-- /input-group -->
            </div><!-- /.col-lg-6 -->
            <div  class="row" style="margin-top:10px;">
                <ul class="nav nav-pills nav-justified">
                    <li role="navigation" id="articleData" ><a>By title, summary, journal or publication date</a></li>
                    <li role="navigation" id="authorName" ><a>By author name</a></li>
                    <li role="navigation" id="articleCategory"><a>By category</a></li>
                </ul>
                
            </div>
       
    </div>

    <div id="loading" style="display:none; color:green; font-weight:bold; padding-top: 10px">
        <div class="text-center"><span class="glyphicon glyphicon-refresh glyphicon-refresh-animate"></span> Loading...</div>
    </div>
    <div class="container" id="articles">

    </div>
}

@section scripts{
@Scripts.Render("~/bundles/jqueryval")
@Scripts.Render("~/bundles/jquery-ui-ajax")
    <script type="text/javascript">
        function onBeforeSend(data) {
            $("#loading").show(200);
        }
        function onComplete() {
            $("#loading").hide(200);
        }
        function onSubmit() {
            callAjaxGetArticles();
        }
        function changeDescending() {
            var val = $("#OrderByDescending").attr("value");
            var currentValue = val === "True" || val == "true";
            $("#OrderByDescending").attr("value", !currentValue);
            if (currentValue)
                $("#orderSwitcher").removeClass("glyphicon-arrow-down").addClass("glyphicon-arrow-up");
            else
                $("#orderSwitcher").removeClass("glyphicon-arrow-up").addClass("glyphicon-arrow-down");

        }
        function setupNavigationLinksStyle() {
            $("[role='navigation']").click(function () {
                $("[role='navigation']").removeClass("active");
                $(this).addClass("active");
                $("#typeOfSearch").attr("value", $(this).attr("id"));

                if ($(this).attr("id") === "articleCategory") {
                    $("#category").show().change();
                    $("#searchKey").hide();
                }
                else {
                    $("#category").hide();
                    $("#searchKey").show();
                }

            });

            $("#category").change(function () {
                $("#searchKey").val($("#category").val());
            });
        }

        function setupDefaultValues(){
            var defaultSearchType = $("#typeOfSearch").val();
            if (defaultSearchType === "articleCategory") {
                $("[value='" + $("#searchKey").val() + "']").prop("selected", true);
            }
            $("#" + defaultSearchType).click();

        }

        $(function () {
            setupNavigationLinksStyle();
            setupDefaultValues();
            callAjaxGetArticles();

            if ($("#orderByDescending").val() == "true") {
                $("#order").append("<button class='btn btn-sm btn-warning'><span class='glyphicon glyphicon-arrow-up'></span></button>").click(function () {
                    $("#orderByDescending").val("false");
                    $("form").submit();
                })
            } else {
                $("#order").append("<button class='btn btn-sm btn-warning'><span class='glyphicon glyphicon-arrow-down'></span></button>").click(function () {
                    $("#orderByDescending").val("true");
                    $("form").submit();
                });
            }
        });

        function callAjaxGetArticles() {
            $.ajax({
                url: '@Url.Action("GetArticles", "Articles")',
                data: {
                    Page: getElemVal("Page", 1),
                    SearchKey: getElemVal("searchKey", ""),
                    SearchType: getElemVal("typeOfSearch",""),
                    SortType: getElemVal("SortType", 0),
                    OrderByDescending: getElemVal("OrderByDescending",true)
                },
                beforeSend: onBeforeSend,
                complete: onComplete,
                success: function (data) {
                    $('#articles').html(data);
                }
            });
        }

        function getElemVal(id, def){
            var obj = $("#" + id);
            var res = obj === null ? undefined : $(obj).val();

            if (res === undefined)
                res = def;
            console.log(id + ": " + res);
            return res;
        }

        function PreviousPage() {
            $("#Page").attr("value", "@(Model.Page-1)");
            onSubmit();
        }

        function NextPage() {
            $("#Page").attr("value", "@(Model.Page+1)");
            onSubmit();
        }
    </script>
}
