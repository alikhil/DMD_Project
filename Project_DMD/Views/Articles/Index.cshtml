@using Project_DMD.Classes
@using Project_DMD.Models
@model ArticlesIndexViewModel

@{
    ViewBag.Title = "Articles";
}
<div class="well">
    <h2>You have access to more than one million articles. Use it!</h2>
</div>
<p>
    @Html.ActionLink("Add New Article", "Create")
</p>


@{ 
    SelectList list = ViewBag.SelectedList;
    SelectList sortes = ViewBag.Sortes;
    <div id="container" class="container">
        @Html.Hidden("OrderByDescending")
        <div class="row">
            <div>
                <table class="table table-bordered table-hover table-sortable" id="tab_logic">
                    <thead>
                        <tr>
                            <th>Article Name @Html.TextBox("ArticleTitle", "", new { @class = "wide" })</th>
                            <th>Author Name @Html.TextBox("AuthorName", "", new { @class = "wide" })</th>
                            <th>Publication year @Html.TextBox("PublicationYear", "", new { @class = "wide" })</th>
                            <th>Keyword @Html.TextBox("ArticleSummary", "", new { @class = "wide" })</th>
                            <th>Journal reference @Html.TextBox("JournalReference", "", new { @class = "wide" })</th>
                            <th>Category @Html.DropDownList("CategoryName", list, new { @class = "wideforcategories" })</th>
                            <th>Order by @Html.DropDownList("SortType", sortes, new { @class = "high" })</th>
                            <th>
                                <div style="display:inline-block;" id="order"></div>
                            </th>
                            <th>
                                <div style="display:inline-block;">
                                    <button type="button" onclick="onSubmit(this)" class="btn btn-sm btn-success">
                                        <span class="glyphicon glyphicon-search"></span>
                                    </button>
                                </div>
                            </th>
                        </tr>
                    </thead>
                </table>
            </div>
        </div>
       
    </div>

    <div id="loading" style="display:none; color:Red; font-weight:bold;">
        <div class="text-center"><span class="glyphicon glyphicon-refresh glyphicon-refresh-animate"></span> Loading...</div>
    </div>
    <div class="container" id="articles">

    </div>
}

@section scripts{
@Scripts.Render("~/bundles/jqueryval")
@Scripts.Render("~/bundles/jquery-ui-ajax")
    <script type="text/javascript">
        function onBeforeSend(data) {
            $("#loading").show(200);
        }
        function onComplete() {
            $("#loading").hide(200);
        }
        function onSubmit(form) {
            callAjaxGetArticles();
        }
        $(function () {
            callAjaxGetArticles();
            if ($("#orderByDescending").val() == "true") {
                $("#order").append("<button class='btn btn-sm btn-warning'><span class='glyphicon glyphicon-arrow-up'></span></button>").click(function () {
                    $("#orderByDescending").val("false");
                    $("form").submit();
                })
            } else {
                $("#order").append("<button class='btn btn-sm btn-warning'><span class='glyphicon glyphicon-arrow-down'></span></button>").click(function () {
                    $("#orderByDescending").val("true");
                    $("form").submit();
                });
            }
        });

        function callAjaxGetArticles() {
            $.ajax({
                url: '@Url.Action("GetArticles", "Articles")',
                data: {
                    Page: getElemVal("page", 1),
                    ArticleTitle: getElemVal("ArticleTitle", ""),
                    AuthorName: getElemVal("AuthorName", ""),
                    ArticleSummary: getElemVal("ArticleSummary", ""),
                    JournalReference: getElemVal("JournalReference", ""),
                    PublicationYear: getElemVal("PublicationYear", 0),
                    SortType: getElemVal("SortType", 0),
                    CategoryName: getElemVal("CategoryName", ""),
                    OrderByDescending: getElemVal("OrderByDescending",true)
                },
                beforeSend: onBeforeSend,
                complete: onComplete,
                success: function (data) {
                    $('#articles').html(data);
                }
            });
        }

        function getElemVal(id, def){
            var obj = $("#" + id);
            var res = obj === null ? undefined : $(obj).val();

            if (res === undefined)
                res = def;
            console.log(id + ": " + res);
            return res;
        }

        function PreviousPage() {
            $("#container").append($("<input hidden name='page'>").attr("value", "@(ViewBag.Page-1)"));
            $("form").submit();
        }

        function NextPage() {
            $("#container").append($("<input hidden name='page'>").attr("value", "@(ViewBag.Page+1)"));
            $("form").submit();
        }
    </script>
}
