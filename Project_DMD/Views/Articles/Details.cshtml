@using Project_DMD.Classes
@model Project_DMD.Models.Article

@{
    ViewBag.Title = "Details";
}


We must show here article data, authors, related articles, favorite state for current user, categories 
<h2>Details</h2>
@if (Model != null)
{ 
    if (!ViewBag.Favorite)
    {
        using(Html.BeginForm("Favorite","Articles", FormMethod.Post))
        {
            <input type="hidden" name="articleId" value="@Model.ArticleId"/>
            <input type="submit" value="Add to favorite" />
        }
    }
    else
    {
        using (Html.BeginForm("RemoveFromFavorite", "Articles", FormMethod.Post))
        {
            <input type="hidden" name="articleId" value="@Model.ArticleId" />
            <input type="submit" value="remove from favorite" />
        }
    }
}
<div>
    <h4>Article</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Url)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Url)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Title)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Title)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Summary)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Summary)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Published)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Published)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Updated)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Updated)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.JournalReference)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.JournalReference)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.DOI)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.DOI)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Views)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Views)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Categories)
        </dt>

        <dd>
            @if (Model.Categories != null)
            {
                <p>
                    @foreach (var category in Model.Categories)
                    {
                        <span>@Html.ActionLink(Global.Instance.Categories[category], "Index", new { category = category }) | </span>
                    }
                </p>
            }
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.AuthorsList)
        </dt>
        <dd>
            @{
                if (Model != null && Model.AuthorsList != null)
                {
                    foreach (var author in Model.AuthorsList)
                    {
                        <span>@Html.ActionLink(author.AuthorName, "ShowAuthor", new { id = author.AuthorId }) |</span>
                    }
                }
            }
        </dd>
    </dl>
</div>
<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.ArticleId }) |
    @Html.ActionLink("Back to List", "Index")
</p>
