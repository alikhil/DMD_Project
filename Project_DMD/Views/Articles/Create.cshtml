@model Project_DMD.Models.Article

@{
    ViewBag.Title = "Create";
}
<div class="well">
    <h2>Create</h2>
</div>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Here you can add your own article</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Url, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Url, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Url, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.JournalReference, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.JournalReference, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.JournalReference, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DOI, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DOI, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DOI, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Categories, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{ SelectList list = ViewBag.SelectedList;}
                @Html.ListBoxFor(model => model.Categories, list)
                @Html.ValidationMessageFor(model => model.Categories, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Authors, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input id="author" type="text" name="author" />
                <input type="hidden" id="author-id">
                <button id="add-author-btn" type="button" class="btn btn-success">Add</button>
                <div id="authors">
                    
                </div>
            </div>
        </div>
        <div class="form-group">
            <table class="table table-bordered">
                <tr>
                    <th>
                        @Html.LabelFor(model => model.Summary, htmlAttributes: new { @class = "control-label col-md-2" })
                    </th>
                </tr>
                <tr>
                    <td>
                        @Html.EditorFor(model => model.Summary, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Summary, "", new { @class = "text-danger" })
                    </td>
                </tr>
            </table>
        </div>
    </div>

    
    <div style="display:inline-block">
        <input type="submit" value="Create" class="btn btn-success" />
    </div>
    <div style="display:inline-block">
        @Html.ActionLink("Back to List", "Index", new { }, new { @class = "btn btn-warning" })
    </div>
}
@section styles{
    @Styles.Render("~/Content/jui")
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jquery-ui-ajax")
    <script type="text/javascript">
        $(function() {
            var str = "";
            $("#author").on('change keyup paste', (function() {
                str = $(this).val();
                //$("#temp").text($str);
                var authors = [];
                $.ajax({
                    url: "/Articles/GetAuthors",
                    type: 'GET',
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    data: { search: str },
                    success: function(data) {
                        console.log(data);
                        console.log(data[0]);
                        for (var i = 0; i < data.length; i++) {
                            authors.push({ label: data[i].AuthorName, value: data[i].AuthorId });
                        }
                        console.log(authors);
                        $("#author").autocomplete({
                            minLength: 0,
                            source: authors,
                            focus: function(event, ui) {
                                $("#author").val(ui.item.label);
                                return false;
                            },
                            select: function(event, ui) {
                                $("#author").val(ui.item.label);
                                $("#author-id").val(ui.item.value);
                                return false;
                            }
                        }).autocomplete("instance")._renderItem = function(ul, item) {
                            return $("<li>").append("<a>" + item.label + "</a>").appendTo(ul);
                        };
                    },
                    error: function(error) {
                        console.log(error);
                    }
                });
            }));

            $("#add-author-btn").click(function () {
                var authorId = $("#author-id").val() || 0;
                var authorName = $("#author").val();
                var iterator = $("#authors").children().length;
                $("#authors").append("<div><p>" + authorName +
                    "</p><input hidden name='authors[" + iterator + "].AuthorName' value='" + authorName +
                    "'><input hidden name='authors[" + iterator + "].AuthorId' value='" + authorId + "'></div>");
                $("#author").val("");
                $("#author-id").val("0");
            });
        });
</script>
}
